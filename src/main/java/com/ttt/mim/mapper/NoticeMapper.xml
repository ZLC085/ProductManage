<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ttt.mim.dao.NoticeDao">
    <resultMap id="BaseResultMap" type="com.ttt.mim.domain.Notice">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="BIT"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,title,content,status,user_id,create_time,modify_time
    </sql>

    <select id="query" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM notice
        <where>
            <if test="id != null and id != ''">and id LIKE CONCAT('%',#{id},'%') </if>
            <if test="title != null and title != ''">and title LIKE CONCAT('%',#{title},'%') </if>
            <if test="content != null and content != ''"> and content LIKE CONCAT('%',#{content},'%') </if>
            <if test="status != null and status != ''">and status LIKE CONCAT('%',#{status},'%') </if>
            <if test="userId != null and userId != ''">and user_id LIKE CONCAT('%',#{userId},'%') </if>
            <if test="createTime != null and createTime != ''">and create_time LIKE CONCAT('%',#{create_time},'%') </if>
            <if test="modifyTime != null and modifyTime != ''">and modify_time LIKE CONCAT('%',#{modifyTime},'%') </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit ${offset}, ${limit}
        </if>
    </select>

    <select id="getById" parameterType="Integer" resultType="com.ttt.mim.domain.Notice">
        SELECT
        <include refid="Base_Column_List"/>
        FROM notice
        <where>
            id = #{id}
        </where>
    </select>

    <insert id="add" parameterType="com.ttt.mim.domain.Notice" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">id,</if>
        <if test="title != null">title,</if>
        <if test="content != null">content,</if>
        <if test="status != null">status,</if>
        <if test="userId != null">user_id,</if>
        <if test="createTime != null">create_time,</if>
        <if test="modifyTime != null">modify_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="title != null">#{title,jdbcType=VARCHAR},</if>
        <if test="content != null">#{content,jdbcType=VARCHAR},</if>
        <if test="status != null">#{status,jdbcType=BIT},</if>
        <if test="userId != null">#{userId,jdbcType=INTEGER},</if>
        <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
        <if test="modifyTime != null">#{modifyTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>

    <update id="update" parameterType="com.ttt.mim.domain.Notice">
            UPDATE notice
            <set>
                <if test="title != null">title = #{title}, </if>
                <if test="content != null">content = #{content}, </if>
                <if test="status != null">status = #{status}, </if>
                <if test="userId != null">user_id = #{userId},</if>
                <if test="modifyTime != null">modify_time = #{modifyTime}</if>
            </set>
        where id=#{id}
    </update>

    <delete id="delete" >
        DELETE FROM notice WHERE id=#{id}
    </delete>

    <delete id="batchDelete">
        DELETE FROM notice WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="count" resultType="java.lang.Integer">
        SELECT
        count(id)
        FROM notice
    </select>
</mapper>